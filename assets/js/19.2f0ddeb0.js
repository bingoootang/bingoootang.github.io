(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{283:function(e,s,a){"use strict";a.r(s);var r=a(4),n=Object(r.a)({},function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"react-同构开发（二）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-同构开发（二）","aria-hidden":"true"}},[e._v("#")]),e._v(" React 同构开发（二）")]),e._v(" "),a("p",[e._v("所谓同构，简单的说就是客户端的代码可以在服务端运行，好处就是能极大的提升首屏时间，避免白屏，另外同构也给SEO提供了很多便利。")]),e._v(" "),a("p",[e._v("React 同构得益于 React 的虚拟 DOM。虚拟 DOM 以对象树的形式保存在内存中，并存在前后端两种展现形式。")]),e._v(" "),a("ul",[a("li",[e._v("在客户端上，虚拟 DOM 通过 ReactDOM 的 render 方法渲染到页面中，形成真实的 dom。")]),e._v(" "),a("li",[e._v("在服务端上，React 提供了另外两个方法： ReactDOMServer.renderToString 和 ReactDOMServer.renderToStaticMarkup 将虚拟 DOM 渲染为 HTML 字符串。\n在服务端通过 ReactDOMServer.renderToString 方法将虚拟 DOM 渲染为 HTML 字符串，到客户端时，React 只需要做一些事件绑定等操作就可以了。")])]),e._v(" "),a("p",[e._v("在这一整套流程中，保证 DOM 结构的一致性是至关重要的一点。 React 通过 "),a("code",[e._v("data-react-checksum")]),e._v("来检测一致性，即在服务端产生 HTML 字符串的时候会额外的计算一个 "),a("code",[e._v("data-react-checksum")]),e._v(" 值，客户端会对这个值进行校验，如果与客户端计算的值一致，则 React 只会进行事件绑定，如果不一致，React 会丢弃服务端返回的 dom 结构重新渲染。")]),e._v(" "),a("h2",{attrs:{id:"服务端对-es6-7-的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端对-es6-7-的支持","aria-hidden":"true"}},[e._v("#")]),e._v(" 服务端对 ES6/7 的支持")]),e._v(" "),a("p",[e._v("React 新版本中已经在推荐采用 ES6/7 开发组件了，因此服务端对 ES6/7 的支持也不得不跟上我们开发组件的步伐。但是现在 node 原生对 ES6/7 的支持还比较弱，这个时候我们就需要借助于 babel 来完成 ES6/7 到 ES5 的转换。这一转换，我们通过 "),a("a",{attrs:{href:"https://babeljs.io/docs/usage/require/",target:"_blank",rel:"noopener noreferrer"}},[e._v("babel-register"),a("OutboundLink")],1),e._v(" 来完成。")]),e._v(" "),a("p",[e._v("babel-register 通过绑定 require 函数的方式（require hook）,在 require jsx 以及使用 ES6/7 编写的 js 文件时，使用 babel 转换语法，因此，应该在任何 jsx 代码执行前，执行 require('babel-register')(config)，同时通过配置项config，配置babel语法等级、插件等。")]),e._v(" "),a("p",[e._v("这里我们给一个配置 demo， 具体配置方法可参看"),a("a",{attrs:{href:"https://babeljs.io/docs/usage/require/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "presets": ["react", "es2015", "stage-0"],\n\n  "plugins": [\n    "transform-runtime",\n    "add-module-exports",\n    "transform-decorators-legacy",\n    "transform-react-display-name"\n  ],\n\n  "env": {\n    "development": {\n      "plugins": [\n        "typecheck",\n        ["react-transform", {\n            "transforms": [{\n                "transform": "react-transform-catch-errors",\n                "imports": ["react", "redbox-react"],\n                "locals": ["module"]\n              }\n            ]\n        }]\n      ]\n    }\n  }\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br")])]),a("h2",{attrs:{id:"css、image-等文件服务端如何支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css、image-等文件服务端如何支持","aria-hidden":"true"}},[e._v("#")]),e._v(" css、image 等文件服务端如何支持")]),e._v(" "),a("p",[e._v("一般情况来说，不需要服务端处理非js文件，但是如果直接在服务端 require 一个非 js 文件的话会报错，因为 require 函数不认识非 js 文件，这时候我们需要做如下处理， 已样式文件为例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var Module = require('module');\nModule._extensions['.less'] = function(module, fn) {\n  return '';\n};\nModule._extensions['.css'] = function(module, fn) {\n  return '';\n};\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("具体原理可以参考"),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/05/require.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("require 解读"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("或者直接在 "),a("code",[e._v("babel-register")]),e._v(" 中配置忽略规则：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('require("babel-register")({\n  ignore: /(\\.css|\\.less)$/,\n});\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("但是，如果项目中使用了 css_modules 的话，那服务端就必须要处理 less 等文件了。为了解决这个问题，需要一个额外的工具 "),a("a",{attrs:{href:"https://github.com/halt-hammerzeit/webpack-isomorphic-tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack-isomorphic-tools"),a("OutboundLink")],1),e._v("，帮助识别 less 等文件。")]),e._v(" "),a("p",[e._v("简单地说，webpack-isomorphic-tools，完成了两件事：")]),e._v(" "),a("ul",[a("li",[e._v("以webpack插件的形式，预编译less（不局限于less，还支持图片文件、字体文件等），将其转换为一个 assets.json 文件保存到项目目录下。")]),e._v(" "),a("li",[e._v("require hook，所有less文件的引入，代理到生成的 JSON 文件中，匹配文件路径，返回一个预先编译好的 JSON 对象。")])]),e._v(" "),a("h2",{attrs:{id:"构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建","aria-hidden":"true"}},[e._v("#")]),e._v(" 构建")]),e._v(" "),a("p",[e._v("客户端的代码通过配置 webpack 打包发布到 CDN 即可。")]),e._v(" "),a("p",[e._v("通过配置 webpack 和 webpack-isomorphic-tools 将非 js 文件打包成 assets 文件即可。")])])},[],!1,null,null,null);s.default=n.exports}}]);