(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{271:function(e,o,v){"use strict";v.r(o);var _=v(4),t=Object(_.a)({},function(){var e=this,o=e.$createElement,v=e._self._c||o;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"前端安全之跨站点请求伪造（csrf）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端安全之跨站点请求伪造（csrf）","aria-hidden":"true"}},[e._v("#")]),e._v(" 前端安全之跨站点请求伪造（CSRF）")]),e._v(" "),v("p",[e._v("跨站点请求伪造（CSRF）的重点在于伪造，是攻击者利用用户身份操作用户账户的一种攻击方式，其本质是重要操作的所有参数都是可以被攻击者猜测到的。")]),e._v(" "),v("p",[e._v("由于现在 Web 应用中用户的会话信息通常都保存在 cookie 中，因此 CSRF 的攻击与防御通常都围绕 cookie 展开。前端同学都理解 cookie 的工作原理，浏览器会在发起请求时带上请求域下的所有 cookie。")]),e._v(" "),v("p",[e._v("比如，登录 "),v("code",[e._v("www.a.com")]),e._v("，在这个域下，用户所有对服务端的请求浏览器都会带上这个域下的所有 cookie（包括用于标识用户会话的 cookie）。攻击者通过某种方式诱导用户访问 "),v("code",[e._v("www.b.com")]),e._v("，并在 "),v("code",[e._v("www.b.com")]),e._v(" 发起了对 "),v("code",[e._v("www.a.com")]),e._v(" 的请求。如果用户登录过 "),v("code",[e._v("www.a.com")]),e._v(" （或者访问 "),v("code",[e._v("www.a.com")]),e._v(" 页面还没有关闭，这与 cookie 的机制有关），那么攻击者就可以以用户的身份进行一些操作了。")]),e._v(" "),v("p",[e._v("CSRF 的攻击原理比较简单，那么我们应该如何防御呢？")]),e._v(" "),v("ol",[v("li",[e._v("验证码")])]),e._v(" "),v("p",[e._v("验证码被认为是对抗 CSRF 最简洁有效的方法。CSRF 的攻击过程往往是在用户不知情的情况下构造网络请求，而验证码则强制用户与应用发生交互。但是，验证码并不是万能的，它破坏了用户体验。因此需要综合考虑使用场景。")]),e._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[e._v("Referer Check")])]),e._v(" "),v("p",[v("code",[e._v("referer")]),e._v(" 是 HTTP 协议中的一个请求头，用于告知服务器请求的来源。因此，可以在服务端检查请求的 "),v("code",[e._v("referer")]),e._v("，如果不在合法的范围内，则可以认定请求为攻击请求。"),v("br"),e._v("\n但是 "),v("code",[e._v("referer")]),e._v(" 检查有个重大的缺点就是，服务器并不能在什么时候都可以获取到 "),v("code",[e._v("referer")]),e._v("，因此 Referer 检查无法成为防御 CSRF 攻击的主要手段。")]),e._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[e._v("Anti CSRF Token")])]),e._v(" "),v("p",[e._v("前面说到，CSRF 的本质是攻击者可以猜到重要操作的所有参数，进而可以伪造用户请求。那么只要添加攻击者无法猜到的参数，就可以防止 CSRF 攻击了，这个参数就是 token。")]),e._v(" "),v("p",[e._v("Token 需要同时放在表单和会话中。在提交请求时，服务器只需验证表单中的 token 和 用户会话中的 token 是否一致，如果一致则认为是合法的，如果不一致，或者请求为空，则认为是非法的。")]),e._v(" "),v("p",[e._v("使用 Anti CSRF Token 有一些限制，token 要足够随机，并且 token 在被使用后应该立即失效，重新生成新的 token。同时，要注意 token 的保密性，不要再 url 中露出。")]),e._v(" "),v("p",[e._v("虽然 Anti CSRF Token 可以有效防止 CSRF 攻击，但是，如果页面同时存在 XSS 类型的攻击话，攻击者是可以窃取 token 的，那么此时对 CSRF 的防御也会失效。")])])},[],!1,null,null,null);o.default=t.exports}}]);